import qbs.base 1.0

Project {
    moduleSearchPaths: "modules"
    DynamicLibrary {
        name: "jreen"
        type: ["dynamiclibrary", "installed_content"]
        qbs.installDir: "~/temp/usr"
        Depends { name: "cpp" }
        Depends { name: "zlib" }
        Depends { name: "qca" }
        Depends { name: "idn" }
        Depends { name: "qt.core" }
        Depends { name: "qt.network" }
        Group {
            files: ["src/abstractroster.cpp",
                    "src/action.cpp",
                    "src/activity.cpp",
                    "src/activityfactory.cpp",
                    "src/attention.cpp",
                    "src/attentionfactory.cpp",
                    "src/bindfeature.cpp",
                    "src/bitsofbinary.cpp",
                    "src/bitsofbinaryfactory.cpp",
                    "src/bookmark.cpp",
                    "src/bookmarkfactory.cpp",
                    "src/bookmarkstorage.cpp",
                    "src/buffereddatastream.cpp",
                    "src/capabilities.cpp",
                    "src/capabilitiesfactory.cpp",
                    "src/captcha.cpp",
                    "src/captchafactory.cpp",
                    "src/chatstate.cpp",
                    "src/chatstatefactory.cpp",
                    "src/client.cpp",
                    "src/connectionbosh.cpp",
                    "src/dataform.cpp",
                    "src/dataformfactory.cpp",
                    "src/datastream.cpp",
                    "src/delayeddelivery.cpp",
                    "src/delayeddeliveryfactory.cpp",
                    "src/directconnection.cpp",
                    "src/disco.cpp",
                    "src/entitytime.cpp",
                    "src/entitytimefactory.cpp",
                    "src/error.cpp",
                    "src/errorfactory.cpp",
                    "src/experimental/iristransport.cpp",
                    "src/experimental/jingleaudiocontent.cpp",
                    "src/experimental/jingleaudiocontentfactory.cpp",
                    "src/experimental/jingleaudiopayload.cpp",
                    "src/experimental/jinglecontent.cpp",
                    "src/experimental/jingle.cpp",
                    "src/experimental/jinglefactory.cpp",
                    "src/experimental/jinglemanager.cpp",
                    "src/experimental/jinglesession.cpp",
                    "src/experimental/jinglespeexcodec.cpp",
                    "src/experimental/jingletransport.cpp",
                    "src/experimental/jingletransportice.cpp",
                    "src/forwarded.cpp",
                    "src/forwardedfactory.cpp",
                    "src/iq.cpp",
                    "src/iqfactory.cpp",
                    "src/iqreply.cpp",
                    "src/jid.cpp",
                    "src/langmap.cpp",
                    "src/logger.cpp",
                    "src/message.cpp",
                    "src/messagefactory.cpp",
                    "src/messagesession.cpp",
                    "src/metacontacts.cpp",
                    "src/metacontactsfactory.cpp",
                    "src/metacontactstorage.cpp",
                    "src/mood.cpp",
                    "src/moodfactory.cpp",
                    "src/mucmessagesession.cpp",
                    "src/mucroom.cpp",
                    "src/mucroomfactory.cpp",
                    "src/nickname.cpp",
                    "src/nicknamefactory.cpp",
                    "src/nonsaslauth.cpp",
                    "src/parser.cpp",
                    "src/pgpencrypted.cpp",
                    "src/pgpfactory.cpp",
                    "src/pgpsigned.cpp",
                    "src/ping.cpp",
                    "src/pingfactory.cpp",
                    "src/prep.cpp",
                    "src/presence.cpp",
                    "src/presencefactory.cpp",
                    "src/privacymanager.cpp",
                    "src/privacyqueryfactory.cpp",
                    "src/privatexml.cpp",
                    "src/pubsubevent.cpp",
                    "src/pubsubeventfactory.cpp",
                    "src/pubsubmanager.cpp",
                    "src/pubsubpublishfactory.cpp",
                    "src/receipt.cpp",
                    "src/receiptfactory.cpp",
                    "src/registrationfeature.cpp",
                    "src/registrationmanager.cpp",
                    "src/registrationquery.cpp",
                    "src/registrationqueryfactory.cpp",
                    "src/saslfeature.cpp",
                    "src/sessionfeature.cpp",
                    "src/sjdns.cpp",
                    "src/softwareversion.cpp",
                    "src/softwareversionfactory.cpp",
                    "src/stanza.cpp",
                    "src/stanzaextension.cpp",
                    "src/stanzafactory.cpp",
                    "src/streamfeature.cpp",
                    "src/streamprocessor.cpp",
                    "src/subscription.cpp",
                    "src/tcpconnection.cpp",
                    "src/tlsdatastream.cpp",
                    "src/tlsfeature.cpp",
                    "src/tune.cpp",
                    "src/tunefactory.cpp",
                    "src/udpconnection.cpp",
                    "src/util.cpp",
                    "src/vcard.cpp",
                    "src/vcardfactory.cpp",
                    "src/vcardmanager.cpp",
                    "src/vcardupdate.cpp",
                    "src/vcardupdatefactory.cpp",
                    "src/xmlentity.cpp",
                    "src/zlibcompressionfeature.cpp",
                    "src/zlibdatastream.cpp"]
	}
	
	Group {
	    files: ["src/abstractroster_p.h",
                    "src/action_p.h",
                    "src/activityfactory_p.h",
                    "src/attentionfactory_p.h",
                    "src/bindfeature_p.h",
                    "src/bitsofbinaryfactory_p.h",
                    "src/bookmarkfactory_p.h",
                    "src/capabilitiesfactory_p.h",
                    "src/captchafactory_p.h",
                    "src/chatstatefactory_p.h",
                    "src/client_p.h",
                    "src/dataformfactory_p.h",
                    "src/dataform_p.h",
                    "src/delayeddeliveryfactory_p.h",
                    "src/directconnection_p.h",
                    "src/disco_p.h",
                    "src/entitytimefactory_p.h",
                    "src/errorfactory_p.h",
                    "src/experimental/jingleaudiocontentfactory_p.h",
                    "src/experimental/jingleaudiocontent_p.h",
                    "src/experimental/jingleaudiopayload_p.h",
                    "src/experimental/jinglecontent_p.h",
                    "src/experimental/jinglefactory_p.h",
                    "src/experimental/jinglemanager_p.h",
                    "src/experimental/jingle_p.h",
                    "src/experimental/jinglesession_p.h",
                    "src/experimental/jinglespeexcodec_p.h",
                    "src/experimental/jingletransportice_p.h",
                    "src/forwardedfactory_p.h",
                    "src/iqfactory_p.h",
                    "src/iq_p.h",
                    "src/messagefactory_p.h",
                    "src/message_p.h",
                    "src/metacontactsfactory_p.h",
                    "src/metacontacts_p.h",
                    "src/moodfactory_p.h",
                    "src/mucmessagesession_p.h",
                    "src/mucroomfactory_p.h",
                    "src/mucroom_p.h",
                    "src/nicknamefactory_p.h",
                    "src/nonsaslauth_p.h",
                    "src/parser_p.h",
                    "src/pgpfactory_p.h",
                    "src/pingfactory_p.h",
                    "src/prep_p.h",
                    "src/presencefactory_p.h",
                    "src/presence_p.h",
                    "src/privacymanager_p.h",
                    "src/privacyqueryfactory_p.h",
                    "src/privatexml_p.h",
                    "src/pubsubeventfactory_p.h",
                    "src/pubsubmanager_p.h",
                    "src/pubsubpublishfactory_p.h",
                    "src/receiptfactory_p.h",
                    "src/registrationfeature_p.h",
                    "src/registrationmanager_p.h",
                    "src/registrationqueryfactory_p.h",
                    "src/registrationquery_p.h",
                    "src/saslfeature_p.h",
                    "src/sessionfeature_p.h",
                    "src/sjdns_p.h",
                    "src/softwareversionfactory_p.h",
                    "src/stanzafactory_p.h",
                    "src/stanza_p.h",
                    "src/streamfeature_p.h",
                    "src/tlsdatastream_p.h",
                    "src/tlsfeature_p.h",
                    "src/tunefactory_p.h",
                    "src/vcardfactory_p.h",
                    "src/vcard_p.h",
                    "src/vcardupdatefactory_p.h",
                    "src/xmlentity_p.h",
                    "src/zlibcompressionfeature_p.h",
                    "src/zlibdatastream_p.h"]
	}
	Group {
            fileTags: ["install", "hpp"]
            qbs.installDir: ["include"]
            files: ["src/abstractroster.h",
                    "src/activity.h",
                    "src/attention.h",
                    "src/bitsofbinary.h",
                    "src/bookmark.h",
                    "src/bookmarkstorage.h",
                    "src/buffereddatastream.h",
                    "src/capabilities.h",
                    "src/captcha.h",
                    "src/chatstate.h",
                    "src/client.h",
                    "src/connectionbosh.h",
                    "src/connection.h",
                    "src/dataform.h",
                    "src/datastream.h",
                    "src/delayeddelivery.h",
                    "src/directconnection.h",
                    "src/disco.h",
                    "src/entitytime.h",
                    "src/error.h",
                    "src/experimental/iristransport.h",
                    "src/experimental/jingleaudiocontent.h",
                    "src/experimental/jingleaudiopayload.h",
                    "src/experimental/jinglecontent.h",
                    "src/experimental/jinglemanager.h",
                    "src/experimental/jinglesession.h",
                    "src/experimental/jingletransport.h",
                    "src/forwarded.h",
                    "src/iq.h",
                    "src/iqreply.h",
                    "src/jid.h",
                    "src/jreen.h",
                    "src/jstrings.h",
                    "src/langmap.h",
                    "src/logger.h",
                    "src/message.h",
                    "src/messagesession.h",
                    "src/metacontactstorage.h",
                    "src/mood.h",
                    "src/mucroom.h",
                    "src/nickname.h",
                    "src/parser.h",
                    "src/pgpencrypted.h",
                    "src/pgpsigned.h",
                    "src/ping.h",
                    "src/presence.h",
                    "src/privacymanager.h",
                    "src/privatexml.h",
                    "src/pubsubevent.h",
                    "src/pubsubmanager.h",
                    "src/receipt.h",
                    "src/registrationmanager.h",
                    "src/softwareversion.h",
                    "src/stanzaextension.h",
                    "src/stanza.h",
                    "src/streamprocessor.h",
                    "src/subscription.h",
                    "src/tcpconnection.h",
                    "src/tune.h",
                    "src/udpconnection.h",
                    "src/util.h",
                    "src/vcard.h",
                    "src/vcardmanager.h",
                    "src/vcardupdate.h"]
        }
        Group {
            files: ["3rdparty/jdns/jdns.h",
                    "3rdparty/jdns/jdns_mdnsd.h",
                    "3rdparty/jdns/jdns_packet.h",
                    "3rdparty/jdns/jdns_p.h",
                    "3rdparty/jdns/qjdns.h",
                    "3rdparty/jdns/qjdns_p.h",
                    "3rdparty/jdns/qjdns_sock.h"]
        }
        Group {
            files: ["3rdparty/jdns/qjdns.cpp",
                    "3rdparty/jdns/qjdns_sock.cpp"]
        }
        Group {
            files: ["3rdparty/jdns/jdns.c",
                    "3rdparty/jdns/jdns_mdnsd.c",
                    "3rdparty/jdns/jdns_packet.c",
                    "3rdparty/jdns/jdns_sys.c",
                    "3rdparty/jdns/jdns_util.c"]
        }
        
        cpp.includePaths: [".", "3rdparty"]
    }
}
